#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
#source ynh_add_swap
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

key=$(ynh_string_random --length=45 | base64)
ynh_app_setting_set --key=key --value=$key

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --key=redis_db --value=$redis_db

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing Ruby..."

ynh_ruby_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

chown -R "$app:www-data" "$install_dir"

#=================================================
# PREPARE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression "Configuring the PostgreSQL database..."

#Create postgis extension
ynh_psql_db_shell <<< "ALTER USER $db_user WITH SUPERUSER;"
ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS postgis;"
ynh_psql_db_shell <<< "ALTER USER $db_user WITH NOSUPERUSER;"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Building $app..."

pushd "$install_dir"
    gem update --system
    gem install bundler
	gem install bundler --no-document
    ynh_exec_as_app $ld_preload bundle config set --local path 'vendor/bundle'
    ynh_exec_as_app $ld_preload bundle config set --local without 'development test'
    ynh_exec_as_app $ld_preload bundle install --jobs 4 --retry 3
    
    ynh_safe_rm vendor/bundle/ruby/$ruby_version/cache/*.gem
popd 

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd
yunohost service add "$app" --description="$appâ€™s service" --log="/var/log/$app/$app.log"

ynh_config_add_systemd --service="$app-sidekiq" --template="dawarich-sidekiq.service"
yunohost service add "$app-sidekiq" --description="$app sidekiq service"

ynh_config_add_logrotate

# Use logrotate to manage application logfile(s)
mkdir -p /var/log/$app
chown $app:$app /var/log/$app
ynh_use_logrotate

# Create a dedicated Fail2Ban config
#ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"
ynh_systemd_action --service_name=${app}-sidekiq --action="start" --log_path=/var/log/$app/$app-sidekiq.log --line_match="Schedules Loaded"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
